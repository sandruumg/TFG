---
import { db, sum, eq, desc, count, RankingLibros, Libros, asc } from 'astro:db';

const librosMasPopulares = await db.select({ cantidadEstrellas: sum(RankingLibros.estrellas), 
                                             cantidadValoraciones: count(RankingLibros.idLibro),
                                             portadaLibro: Libros.portadaLibro, 
                                             id: RankingLibros.idLibro
                                            })
                        .from(RankingLibros)
                        .innerJoin(Libros, eq(RankingLibros.idLibro, Libros.idLibro))
                        .groupBy(RankingLibros.idLibro)
                        .orderBy(desc(sum(RankingLibros.estrellas)))
                        .limit(10);

const librosConPorcentaje = librosMasPopulares.map(libro => {
    const porcentaje = parseInt(libro.cantidadEstrellas || '0') / (libro.cantidadValoraciones * 5) * 100;
    return { ...libro, porcentaje };
});

// Ordenar la lista de libros por el porcentaje
const librosOrdenadosPorPorcentaje = librosConPorcentaje.sort((a, b) => b.porcentaje - a.porcentaje);
---

<section>
  <h1 class="fuente-1 text-secondary-dark text-4xl ml-32 my-5 py-5">Lo m√°s popular</h1>
    <div class="carousel carousel-center p-3 space-x-10 rounded-box pb-12" style="width:100%; padding-left: 57px;">
      {
        librosOrdenadosPorPorcentaje.map(({cantidadEstrellas, cantidadValoraciones, portadaLibro, id, porcentaje}) =>(
            <div class="carousel-item" data-bs-interval="10000" style="position: relative;">
                <a href={`InfoLibro?idLibro=${id}`}>
                    <img src={portadaLibro} class="rounded-box transition-transform hover:scale-110" style="margin-top: 35px;margin-left: 24px;width: 149px;height: 240px;position: relative;z-index: 0;" />
                </a>
                {
                  cantidadValoraciones > 0 && cantidadEstrellas != null && (
                    <div class="radial-progress bg-neutral-content text-secondary-dark border-4 border-neutral-content" style={{ '--value': porcentaje.toString() , left: '-200px', top: '85%', transform: 'translateY(-50%)' }} role="progressbar">
                      {porcentaje.toFixed(0)}%
                    </div>
                  )
                }
            </div> 
        ))
      }
    </div>
  
</section>