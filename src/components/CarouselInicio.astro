---
// import { db, Libros, eq, desc, count } from 'astro:db';
import { turso } from '../turso'; // nuevo

//para visualizar los libros del carrusel de manera aleatoria

// const librosTotales = await db.select({ value: count() }).from(Libros);

// nueva consulta turso
const { rows } = (await turso.execute({
  sql: 'SELECT COUNT(*) AS value FROM Libros;',
}) as unknown as { rows: { value: number }[] });

const cantidadLibros = rows[0]?.value ?? 0;


const listaLibros = [];
let numRandom: any[] = [];
var random = 0;
for (let i = 0; i < 8; i++) {
    do {
        random = Math.floor(Math.random() * cantidadLibros) + 1;
    } while (numRandom.includes(random));
    
    numRandom.push(random);
    // const libro = await db.select().from(Libros).where(eq(Libros.idLibro, random));
    // nueva consulta turso
      const { rows } = await turso.execute({
        sql: 'SELECT * FROM Libros WHERE idLibro = ?;',
        args: [random],
    });
    listaLibros.push(rows[0]);
}

// const librosNovedades = await db.select().from(Libros).orderBy(desc(Libros.fechaPubLibro)).limit(3);

---
<section class="bg-secondary">
        <div id="slider" class="flex justify-around items-center h-[90vh] relative">
            <div class="list">
                {
                listaLibros.slice().reverse().map(({idLibro, fondoLibro, tituloLibro, nombreAutor, sinopsisLibro}, index)=>( //recorremos el mapa y mostramos información del libro
                <div class={index === 7 ? "item actual" : "item hidden"}>
                   <img src={String(fondoLibro)} alt="">
                    <div class="content">
                        <div class="title">{String(tituloLibro)}</div>
                        <div class="type">{String(nombreAutor)}</div>
                        <div class="description">{String(sinopsisLibro)}</div>
                    </div>
                    
                </div>
                
                ))
            }
            </div>
            <div class="imagen flex items-center">
                <button class="prev" id="prev">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 h-10">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                    </svg>
                </button>
                <div class="thumbnail">
                    {
                    listaLibros.map(({portadaLibro, idLibro}, index)=>( //recorremos el mapa y mostramos portada
                    <div class={index === 0 ? "item current":"item hidden"} >
                         <a href={`InfoLibro?idLibro=${idLibro}`}><img src={String(portadaLibro)} alt=""></a>
                    </div>
                    ))
                    }
                </div>
                <button class="next" id="next">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 h-10">
                        <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                    </svg>
                </button>
            </div>
        </div>


</section>
<script>
    //Logica para el carrusel 
    const slider = document.querySelector('.slider'); //contenedor
    const list = document.querySelectorAll('.list .item');
    const thumbnail = document.querySelectorAll('.thumbnail .item');
    const next = document.getElementById('next');
    const prev = document.getElementById('prev');
    const imagenes = Array.from(thumbnail);
    const items = Array.from(list);
    let currentItem = items.findIndex(item => item.classList.contains('actual'));
    let currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));

    if(next){ //si pulsa >
        next.addEventListener('click', function(){           
            if(currentItem === 0){ //si es el primero
                    //añadimos estilos para mostrar los libros en orden
                    items[currentItem].classList.remove('actual');
                    items[currentItem].classList.add('hidden');
                    items[currentItem + 7].classList.add('actual');
                    currentItem = items.findIndex(item => item.classList.contains('actual'));
                   
                    
                    imagenes[currentImg].classList.remove('current');
                    imagenes[currentImg].classList.add('hidden');
                    imagenes[currentImg-7].classList.add('current');
                    imagenes[currentImg-7].classList.remove('hidden');
                    currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));

                }else{ //si es del 2 al 7
                    //añadimos estilos para mostrar los libros en orden
                    items[currentItem].classList.remove('actual');
                    items[currentItem].classList.add('hidden');
                    items[currentItem-1].classList.add('actual');
                    currentItem = items.findIndex(item => item.classList.contains('actual'));

                    imagenes[currentImg].classList.remove('current');
                    imagenes[currentImg].classList.add('hidden');
                    imagenes[currentImg+1].classList.add('current');
                    imagenes[currentImg+1].classList.remove('hidden');
                    currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));
                }

                
        })
    }

    if(prev){//si pulsa <
        prev.addEventListener('click', function(){            
                if(currentItem === 7){//si es el ultimo libro
                    //añadimos estilos para mostrar los libros en orden
                    items[currentItem].classList.remove('actual');
                    items[currentItem].classList.add('hidden');
                    items[currentItem-7].classList.add('actual');
                    currentItem = items.findIndex(item => item.classList.contains('actual'));

                    imagenes[currentImg].classList.remove('current');
                    imagenes[currentImg].classList.add('hidden');
                    imagenes[currentImg+7].classList.add('current');
                    imagenes[currentImg+7].classList.remove('hidden');
                    currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));

                }else{
                    //añadimos estilos para mostrar los libros en orden
                    items[currentItem].classList.remove('actual');
                    items[currentItem].classList.add('hidden');
                    items[currentItem+1].classList.add('actual');
                    currentItem = items.findIndex(item => item.classList.contains('actual'));

                    imagenes[currentImg].classList.remove('current');
                    imagenes[currentImg].classList.add('hidden');
                    imagenes[currentImg-1].classList.add('current');
                    imagenes[currentImg-1].classList.remove('hidden');
                    currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));
                }
        })
    }

</script>