---
import { db, Libros, eq, desc, count } from 'astro:db';

const librosTotales = await db.select({ value: count() }).from(Libros);

var cantidadLibros = librosTotales[0].value;
const listaLibros = [];
let numRandom: any[] = [];
var random = 0;
for (let i = 0; i < 4; i++) {
    do {
        random = Math.floor(Math.random() * cantidadLibros) + 1;
    } while (numRandom.includes(random));
    
    numRandom.push(random);
    const libro = await db.select().from(Libros).where(eq(Libros.idLibro, random));
    listaLibros.push(libro[0]);
}

const librosNovedades = await db.select().from(Libros).orderBy(desc(Libros.fechaPubLibro)).limit(3);

---
<section class="flex items-center justify-center">
    <div class="slider">
        <div class="list">
            {
            listaLibros.slice().reverse().map(({idLibro, fondoLibro, tituloLibro, nombreAutor, sinopsisLibro}, index)=>(
            <div class={index === 3 ? "item actual" : "item hidden"}>
                <img src={fondoLibro} alt="">
                <div class="content">
                    <div class="title">{tituloLibro}</div>
                    <div class="type">{nombreAutor}</div>
                    <div class="description">{sinopsisLibro}</div>
                    <div class="button">
                        <a href={`InfoLibro?idLibro=${idLibro}`}>Ver mas</a>
                    </div>
                </div>
            </div>
            
            ))
        }
        </div>
        
        <div class="thumbnail">
            {
             listaLibros.map(({portadaLibro}, index)=>(
            <div class={index === 0 ? "item current":"item"}>
                <img src={portadaLibro} alt="">
            </div>
            ))
            }
        </div>
        <div class="nextPrev">
            <button class="prev" id="prev">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                </svg>
            </button>
            <button class="next" id="next">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
                    <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                </svg>
            </button>
        </div>

    </div>


</section>
<script>
    const slider = document.querySelector('.slider'); //contenedor
    const list = document.querySelectorAll('.list .item');
    const thumbnail = document.querySelectorAll('.thumbnail .item');
    const next = document.getElementById('next');
    const prev = document.getElementById('prev');
    const imagenes = Array.from(thumbnail);
    const items = Array.from(list);
    let currentItem = items.findIndex(item => item.classList.contains('actual'));
    let currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));

    if(next){
        next.addEventListener('click', function(){
            console.log(currentItem);
            console.log(list.length);
            
            if(currentItem === 3){
                    items[currentItem].classList.remove('actual');
                    items[currentItem].classList.add('hidden');
                    items[currentItem-3].classList.add('actual');
                    currentItem = items.findIndex(item => item.classList.contains('actual'));

                    imagenes[currentImg].classList.remove('current');
                    imagenes[currentImg+3].classList.add('current');
                    currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));

                }else{
                    items[currentItem].classList.remove('actual');
                    items[currentItem].classList.add('hidden');
                    items[currentItem+1].classList.add('actual');
                    currentItem = items.findIndex(item => item.classList.contains('actual'));

                    imagenes[currentImg].classList.remove('current');
                    imagenes[currentImg-1].classList.add('current');
                    currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));
                }
                
        })
    }

    if(prev){
        prev.addEventListener('click', function(){
            console.log(currentImg);
            console.log(imagenes.length);
            
                
                if(currentItem === 0){
                    items[currentItem].classList.remove('actual');
                    items[currentItem].classList.add('hidden');
                    items[currentItem + 3].classList.add('actual');
                    currentItem = items.findIndex(item => item.classList.contains('actual'));

                    imagenes[currentImg].classList.remove('current');
                    imagenes[currentImg-3].classList.add('current');
                    currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));

                }else{
                    
                    items[currentItem].classList.remove('actual');
                    items[currentItem].classList.add('hidden');
                    items[currentItem-1].classList.add('actual');
                    currentItem = items.findIndex(item => item.classList.contains('actual'));

                    imagenes[currentImg].classList.remove('current');
                    imagenes[currentImg+1].classList.add('current');
                    currentImg = imagenes.findIndex(imagen => imagen.classList.contains('current'));
                }
        })
    }

</script>