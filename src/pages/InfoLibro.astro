---
import Layout from '../layouts/Layout.astro';
import InformacionLibro from '../components/InformacionLibro.astro';
import Sinopsis from '../components/Sinopsis.astro';
import ComentariosLibro from '../components/ComentariosLibro.astro';
import { db, User, Session, Libros, ListaSeguimiento, ListaTerminados } from 'astro:db';
import { eq } from 'astro:db';
import { RankingLibros } from 'astro:db';

const params = new URLSearchParams(Astro.request.url.split('?')[1]);
const idLibro = Number(params.get('idLibro'));
let tituloLibro = '';
let autorLibro = '';
let comentariosLibro;

if (idLibro) {
  // Consultar la información del libro desde la base de datos
  const [libro] = await db.select({
    titulo: Libros.tituloLibro
  }).from(Libros).where(eq(Libros.idLibro, idLibro));

  if (libro) {
    tituloLibro = libro.titulo;
  }
}

if(Astro.locals.user){
    const user = Astro.locals.user!;
    const usuarios = await db.select().from(User).where(eq(User.id, user.id));
    const [infoUser] = usuarios;
    const alias = infoUser.aliasUsuario;
    const id = infoUser.id;
    Astro.props.userAlias = alias;
    Astro.props.userId = id;
    Astro.props.idLibro = idLibro;

}
Astro.props.tituloLibro = tituloLibro;
const { userAlias, userId} = Astro.props;
---

<Layout title={tituloLibro}>
  
    <InformacionLibro/>
    <Sinopsis/>
    <ComentariosLibro/>
   
</Layout>


<script>
  const params = new URLSearchParams(location.search);
  const idLibro = params.get('idLibro');

  try {
      const response = await fetch(`/api/informacionLibro/${idLibro}`);
      if (response.ok) {
        const data = await response.json();
        mostrarLibroEnPantalla(data);
        obtenerMasLibrosAutor(data[0].nombreAutor);
      } else {
        console.error('Error en la solicitud:', response.statusText);
      }
  } catch (error) {
    console.error('Error en la solicitud:', error);
  }

  function mostrarLibroEnPantalla(data: any) {
    const seccionInfoLibro = document.getElementById('seccionInfoLibro');
    const seccionSinopsis = document.getElementById('seccionSinopsis');
    var nombreLibro = document.getElementById('nombreLibro');
    var nombreAutor = document.getElementById('nombreAutor');
    var imagenLibro = document.getElementById('imagenLibro');
    var sinopsisLibro = document.getElementById('sinopsisLibro');
    var numPaginasLibro = document.getElementById('numPaginasLibro');
    var fechaPubliLibro = document.getElementById('fechaPubliLibro');
    var generoLibro = document.getElementById('generoLibro');
    var nombreAutorSelect;
    var estrellas = document.getElementById('estrellas');
    var cantidadValoraciones = document.getElementById('cantidadValoraciones');

    if (seccionInfoLibro && seccionSinopsis) {
      data.forEach((libro: any) => {
        if(imagenLibro && nombreLibro && nombreAutor && sinopsisLibro && numPaginasLibro && fechaPubliLibro && generoLibro && estrellas && cantidadValoraciones){
          nombreLibro.innerHTML = libro.tituloLibro;
          nombreAutor.innerHTML = libro.nombreAutor;
          nombreAutorSelect = libro.nombreAutor;
          imagenLibro.setAttribute('src', libro.portadaLibro);
          seccionInfoLibro.style.backgroundImage = "url('" + libro.fondoLibro + "')";
          sinopsisLibro.innerHTML = libro.sinopsisLibro;
          numPaginasLibro.innerHTML = libro.nPaginasLibro;
          generoLibro.innerHTML = libro.categoriaLibro;
          if(libro.cantidadEstrellas === undefined){
            estrellas.innerHTML = '0%';
            estrellas.style.setProperty("--value", "0");
            cantidadValoraciones.innerHTML = 'Puntuación de los usuarios (0)';
          }else{
            var porcentaje = (libro.cantidadEstrellas / (libro.cantidadValoraciones * 5) * 100);
            estrellas.innerHTML = porcentaje.toFixed(0) + '%';
            estrellas.style.setProperty("--value", porcentaje.toString());
            cantidadValoraciones.innerHTML = 'Puntuación de los usuarios ' + '(' + libro.cantidadValoraciones + ')';
          }
          var fechaPubLibro = formatearFecha(libro.fechaPubLibro);
          fechaPubliLibro.innerHTML = fechaPubLibro;
        }
      });
    }
  }

  function formatearFecha(fechaPubLibro: Date){
    var fecha = new Date(fechaPubLibro);
    var dia = fecha.getDate();
    var mes = fecha.getMonth() + 1;
    var año = fecha.getFullYear();
    var fechaFormateada = (dia < 10 ? '0' : '') + dia + '-' + (mes < 10 ? '0' : '') + mes + '-' + año;
    return fechaFormateada;
  }

  async function obtenerMasLibrosAutor (nombreAutor: String){
    try {
      const response = await fetch(`/api/masLibrosAutor/${nombreAutor}`);
      if (response.ok) {
        const data = await response.json();
        mostrarMasLibrosDelAutor(data);
      } else {
        console.error('Error en la solicitud:', response.statusText);
      }
    } catch (error) {
      console.error('Error en la solicitud:', error);
    }
  }
  
  function mostrarMasLibrosDelAutor(data: any){
    const divLibrosAutor = document.getElementById('divLibrosAutor');
    const divNoLibros = document.getElementById('mensajeNoLibros');
   
    if(divLibrosAutor && divNoLibros){
      divLibrosAutor.innerHTML = '';
      if (data.length == 1) {
        const mensaje = document.createElement('p');
        mensaje.innerText = 'No hay más libros del autor';
        divNoLibros.appendChild(mensaje);
      }else{
        data.forEach((libro: any) => {
          if(libro.idLibro != idLibro){
            divLibrosAutor.innerHTML += `
            <div class="carousel-item" data-bs-interval="10000">
                <a href="InfoLibro?idLibro=${libro.idLibro}">
                    <img src="${libro.portadaLibro}" class="imagen rounded-box transition-transform hover:scale-110" style="margin-top: 35px;margin-left: 24px;width: 149px;height: 240px;position: relative;z-index: 0;" />
                </a>
            </div>`;
          }
        });
      }
    }
  }

  var botonVolver = document.getElementById("botonVolver");
  if(botonVolver){
    botonVolver.addEventListener("click", function() {
        window.history.back();
    });
  }

  document.querySelectorAll('.boton').forEach(boton => {
    if(boton.id === 'seguir'){
      let userId = boton.getAttribute('data-userId')!;
      boton.addEventListener('click', ()=>{
        if(idLibro && userId != null){
          getFollows(userId, idLibro);
        }else{
          const modal = document.getElementById('my_modal_3') as HTMLDialogElement;
          modal.showModal();
        }
      });
    } else if(boton.id === 'fin'){
      let userId = boton.getAttribute('data-userId')!;
      boton.addEventListener('click', ()=>{
        if(idLibro && userId != null){
          getFinish(userId, idLibro)
        }else{
          const modal = document.getElementById('my_modal_3') as HTMLDialogElement;
          modal.showModal();
        }
      });
    }else if(boton.id === 'valoraciones'){
      let userId = boton.getAttribute('data-userId')!;
      let estrellas:any;
        const puntuacion = document.querySelectorAll<HTMLInputElement>('input[type="radio"][name="rating-8"]');
        puntuacion.forEach(input => {
          input.addEventListener('change', () => {
              estrellas = input.value;
          });// evento change
        });//foreach
      boton.addEventListener('click', ()=>{

        let comentario = document.getElementById('comentario') as HTMLTextAreaElement;
        if (comentario && idLibro && estrellas && estrellas != null) {
          const comentString = comentario.value;
          getPuntuacion(userId, idLibro, estrellas, comentString);
        }
      });// evento click
    }//else
  });

  function toastSuccess(msj:string){
      let toast = document.getElementById('toast');
      let msjT =document.getElementById('msjToast'); 
      if(msjT){
        msjT.innerText = msj;
      }
      if(toast){
        toast.style.display = 'block';
        setTimeout(function() {
          let opacity = 1;
          let interval = setInterval(function() {
          if (opacity <= 0) {
            clearInterval(interval); 
              toast.style.display = 'none';
          } else {
            opacity -= 0.4; 
            toast.style.opacity = opacity.toString();
          }
        }, 100);
      }, 3000);
    }
  }

  function toastError(errorMessage:string){
      let toast = document.getElementById('toastE');
      let msjT =document.getElementById('msjToastE'); 
      if(msjT){
        msjT.innerText = errorMessage;
      }
      if(toast){
        toast.style.display = 'block';
        setTimeout(function() {
          let opacity = 1;
          let interval = setInterval(function() {
          if (opacity <= 0) {
            clearInterval(interval); 
              toast.style.display = 'none';
          } else {
            opacity -= 0.4; 
            toast.style.opacity = opacity.toString();
          }
        }, 100);
      }, 3000);
    }
  }

  async function getFollows(userId:string, idLibro:string){
    try {
      const response = await fetch(`/api/insertSeguimiento/${userId}`, 
      { 
        method: 'POST', 
        body: JSON.stringify({idLibro}),
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        }
      });
          
      if (response.ok) {
        const data = await response.json();
        let msj = 'Añadido a lista de seguimiento!'
        toastSuccess(msj);        
      } else {
        if(response.status === 404){
          let errorMessage = 'Error al añadir a lista de seguimiento';
          toastError(errorMessage);
        }
      }
    } catch (error) {
        console.error('Error en la solicitud:', error);
        let errorMessage = 'Error al añadir a lista de seguimiento';
        toastError(errorMessage);
    }
  }

  async function getFinish(userId:string, idLibro:string){
    try {
      const response = await fetch(`/api/insert/${userId}`, { 
        method: 'POST', 
        body: JSON.stringify({idLibro}),
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        }
      });
          
      if (response.ok) {
        const data = await response.json();
        let msj = 'Añadido a lista de terminados!'
        toastSuccess(msj); 
      } else {
        if(response.status === 404){
          let errorMessage = 'Error al añadir a lista de terminados';
          toastError(errorMessage);
        }
      }
    } catch (error) {
        console.error('Error en la solicitud:', error);
        let errorMessage = 'Error al añadir a lista de terminados';
        toastError(errorMessage);
    }
  }

/*****************************************/
/*******************ESTRELLAS**********************/


// const puntuacion = document.querySelectorAll<HTMLInputElement>('input[type="radio"][name="rating-8"]');
// puntuacion.forEach(input => {
//     input.addEventListener('change', () => {
//       let userId = input.getAttribute('data-userId')!;
//         const estrellas = input.value;
//         console.log(estrellas);
//         console.log(userId);
//         console.log(idLibro);

//         if(idLibro){
//           // getPuntuacion(userId, idLibro, estrellas);
//         }
        
//     });
// });

async function getPuntuacion(userId:string, idLibro:string, estrellas:string, comentario:string){
    try {
      const response = await fetch(`/api/insertPuntuacion/${userId}`, 
      { 
        method: 'POST', 
        body: JSON.stringify({idLibro, estrellas, comentario}),
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        }
      });
          
      if (response.ok) {
        const data = await response.json();
        console.log(data);  
        let msj = 'Puntuación añadida!';
        toastValoracion(msj);      
      } else {
        console.log('error');
      }
    } catch (error) {
        console.log('error pero en catch');
    }
  }

  function toastValoracion(msj:string){
    let toast = document.getElementById('toast');
      let msjT =document.getElementById('msjToast'); 
      let modal = document.getElementById('my_modal_2');
      if(msjT){
        msjT.innerText = msj;
      }
      if(toast && modal){
        toast.style.display = 'block';
        modal.style.display = 'none';
        setTimeout(function() {
          let opacity = 1;
          let interval = setInterval(function() {
          if (opacity <= 0) {
            clearInterval(interval); 
              toast.style.display = 'none';
          } else {
            opacity -= 0.4; 
            toast.style.opacity = opacity.toString();
          }
        }, 100);
      }, 2000);
      setTimeout(function() {
          window.location.reload();
      }, 2000);
    }
  }


</script>